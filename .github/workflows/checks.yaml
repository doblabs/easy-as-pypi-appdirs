name: Run checks

on:
  - push
    # What's the deal with pull_request vs. pull_request_target?
    # - If someone opens a PR from their fork, would this workflow
    #   run their (possibly malicious) code?
    #   https://docs.github.com/en/actions/managing-workflow-runs/approving-workflow-runs-from-public-forks
  - pull_request

jobs:

  # *** TEST

  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        #platform: [ubuntu-latest, macos-latest, windows-latest]
        #python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        platform: [ubuntu-latest]
        #python-version: ['3.8']
        python-version: ['3.7', '3.8']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions
    # FIXME/2022-09-28 01:24: Verify: Does tox run the whole Python version matrix itself?
    - name: Test
      run: tox
      env:
        PLATFORM: ${{ matrix.platform }}
    # NTHEN/2022-09-28 01:25: If tox runs all versions, then use matrix to make-test,
    # and take advantage of parallel jobs.
    # - Probably don't need `install tox ...` above.
    # - No, wait, see:
    #     https://hynek.me/articles/python-github-actions/
    #
    #- name: Test with pytest
    #  run: make test
    #  # env:
    #  #   PLATFORM: ${{ matrix.platform }}

  # *** LINT

  # SAVVY: While it might be nice to isolate jobs in separate Yaml files,
  # each file is its own workflow, and each workflow appears separately
  # under the Actions workflow list, so better (cleaner, IMO) to keep
  # all jobs related to the same push or PR within the same workflow
  # (at least when possible: workflows that run after checks complete,
  #  like the coverage workflow, cannot be combined herein).
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 doc8
    - name: Lint
      run: make lint

  # *** DOCS

  docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # SPIKE/2022-09-28 13:56: These:
    # - name: Dump github context
    #   run: echo "${GITHUB_CONTEXT}"
    #   shell: bash
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    # Works:
    - name: Dump repository name
      run: echo "${GITHUB_REPOSITORY#*/}"
      shell: bash
    # Nope, prints "${GITHUB_REPOSITORY#*/}":
    # - name: Dump repository name
    #   run: echo "${PROJNAME}"
    #   shell: bash
    #   env:
    #     PROJNAME: ${GITHUB_REPOSITORY#*/}
    # Trying again:
    - name: Dump repository name
      run: echo "PROJNAME=$(echo "${GITHUB_REPOSITORY#*/}")" >> $GITHUB_ENV
      shell: bash
    # Blank (so env not available later steps, at least not by default):
    - name: Dump PROJNAME
      run: echo "${PROJNAME}"
      shell: bash

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pydocstyle Sphinx sphinx_rtd_theme
    # - name: Clean docs
    #   run: |
    #     make -C docs clean BUILDDIR=_build
    #     # /bin/rm -f docs/${{ github.event.repository.name }}.*rst
    #     # /bin/rm -f docs/${{ github.event.pull_request.base.repo.name }}.*rst
    #     /bin/rm -f "docs/${GITHUB_REPOSITORY#*/}.*rst"
    #     /bin/rm -f "docs/modules.rst"
    # - name: Install package
    #   run: python setup.py install
    - name: Install package
      run: make install
    # - name: Generate HTML docs
    #   run: |
    #     sphinx-apidoc --force -o docs/ "${PROJNAME}"
    #     make -C docs clean
    #     make -C docs html
    - name: Docs build
      run: make docs-html

  # *** DIST

  dist-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Not needed:
        #   python -m pip install setuptools twine wheel
        python -m pip install build
        # FIXME: These needed?
        #python -m pip install twine wheel
        python -m pip install twine
    # - name: Build dist
    #   run: |
    #     python setup.py sdist
    #     python setup.py bdist_wheel
    # - name: Check dist
    #   run: twine check dist/*
    - name: Dist check
      run: make check-dist

  # *** MANIFEST

  manifest:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install check-manifest
    # - name: Check manifest
    #   run: check-manifest -v
    - name: Manifest check
      run: make check-manifest

  # *** PYDOCSTYLE

  # Note that adding Docstrings can be tedious. For many projects, they
  # might not add value. So oftentimes you'll want to disable this job:
  #
  #   pydocstyle:
  #     if: ${{ false }}

  pydocstyle:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pydocstyle toml
    - name: Docstring check
      run: make check-pydocstyle

  # *** COVERAGE

  coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install coverage pytest-cov
        #python -m pip install -U pip setuptools wheel
        python -m pip install -U -r requirements/dev.pip
        #python -m pip install -U -e .
    # make-install is `python -m pip install -U -e .`
    - name: Install package
      run: make install
    # - name: Compute coverage
    #   run: |
    #     coverage run -m pytest tests
    #     coverage report
    #     coverage html
    - name: Coverage compute
      run: make coverage-to-html


# FIXME/2022-09-28 02:11: Add remaining Makefile and tox checks:
#   tox: dist_check, docs, flake8, manifest, pydocstyle
#   make: coverage, coverage-html?, docs, docs-html?, cloc?




